{"mappings":"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","sources":["frontend/client/index.ts","frontend/client/classes/joystick.ts"],"sourcesContent":["import { Joystick } from \"./classes/joystick\";\n\nlet joystick = new Joystick(document.getElementById('joy-1'), {\n    sendTo: '/integration/test1',\n    sendInterval: 200,\n    debug: true\n});\njoystick.init();\n","\nexport interface JoystickOptions {\n    sendTo?: string;\n    sendInterval?: number;\n    debug?: boolean;\n}\n\nexport class Joystick {\n    private elem: HTMLElement;\n    private sendPath: string;\n    private sendInt: number;\n    private debug: boolean;\n    private enabled: boolean;\n    private initialized: boolean;\n    private prevX: number;\n    private prevY: number;\n    private currX: number;\n    private currY: number;\n    private lastDispatch: number;\n    private cbs: {\n        tStart: (e: TouchEvent) => any;\n        tMove: (e: TouchEvent) => any;\n        tEnd: (e: TouchEvent) => any;\n    }\n\n    constructor(elem: HTMLElement, options: JoystickOptions = {}) {\n        this.elem = elem;\n        this.sendPath = options.sendTo;\n        this.sendInt = (options.sendInterval > 50) ? options.sendInterval : 50;\n        this.debug = options.debug == true;\n        this.enabled = false;\n        this.initialized = false;\n        this.prevX = 0; // prev values used to indicate the set of xy that is processed and sent to server\n        this.prevY = 0;\n        this.currX = 0;\n        this.currY = 0;\n        this.lastDispatch = 0;\n        this.cbs = {\n            tStart: this.handleTouch.bind(this),\n            tMove: this.handleMove.bind(this),\n            tEnd: this.handleRelease.bind(this)\n        }\n    }\n\n    public enable(): void {\n        if (!this.initialized) return;\n        this.enabled = true;\n        this.elem.classList.remove('disabled');\n    }\n\n    public disable(): void {\n        this.enabled = false;\n        this.elem.classList.add('disabled');\n    }\n\n    public init(): void {\n        if (this.initialized) return;\n        this.elem.addEventListener('touchstart', this.cbs.tStart);\n        this.elem.addEventListener('touchmove', this.cbs.tMove);\n        this.elem.addEventListener('touchend', this.cbs.tEnd);\n\n        this.initialized = true;\n\n        this.stateCheckLoop();\n\n        this.enable();\n    }\n\n    public disconnect(): void {\n        if (this.initialized) {\n            this.elem.removeEventListener('touchstart', this.cbs.tStart);\n            this.elem.removeEventListener('touchmove', this.cbs.tMove);\n            this.elem.removeEventListener('touchend', this.cbs.tEnd);\n        }\n\n        this.initialized = false;\n\n        this.disable();\n    }\n\n    private handleTouch(e: TouchEvent): void {\n        e.preventDefault();\n        if (!this.enabled) return;\n\n        let touch = e.touches[0] || e.changedTouches[0];\n        let domRect = this.elem.getBoundingClientRect();\n        this.updatePositionData(touch.clientX - domRect.left - this.elem.offsetWidth / 2, touch.clientY - domRect.top - this.elem.offsetWidth / 2);\n        this.elem.classList.remove('released');\n        this.repositionStick();\n        this.dispatchState();\n    }\n\n    private handleMove(e: TouchEvent): void {\n        e.preventDefault();\n        if (!this.enabled) return;\n\n        let touch = e.touches[0] || e.changedTouches[0];\n        let domRect = this.elem.getBoundingClientRect();\n        this.updatePositionData(touch.clientX - domRect.left - this.elem.offsetWidth / 2, touch.clientY - domRect.top - this.elem.offsetWidth / 2);\n        this.repositionStick();\n    }\n\n    private handleRelease(e: TouchEvent): void {\n        e.preventDefault();\n        if (!this.enabled) return;\n\n        this.updatePositionData(0, 0);\n        this.elem.classList.add('released');\n        this.repositionStick();\n        this.dispatchState();\n    }\n\n    private updatePositionData(x: number = 0, y: number = 0): void {\n        if (x != this.currX) {\n            this.currX = x;\n        }\n        if (y != this.currY) {\n            this.currY = y;\n        }\n    }\n\n    private repositionStick(): void {\n        let stick: HTMLElement = this.elem.children[0] as HTMLElement;\n        if (!stick) return;\n        let rad = Math.atan2(this.currY, this.currX);\n        let mag = Math.hypot(this.currX, this.currY);\n        if (mag > this.elem.offsetWidth / 2) {\n            stick.style.left = (this.elem.offsetWidth * (Math.cos(rad) + 1) - stick.offsetWidth) / 2 + 'px';\n            stick.style.top = (this.elem.offsetWidth * (Math.sin(rad) + 1) - stick.offsetHeight) / 2 + 'px';\n        }\n        else {\n            stick.style.left = (this.currX + (this.elem.offsetWidth - stick.offsetWidth) / 2) + 'px';\n            stick.style.top = (this.currY + (this.elem.offsetWidth - stick.offsetHeight) / 2) + 'px';\n        }\n    }\n\n    private processPositionData(): { x: number, y: number } {\n        this.prevX = this.currX;\n        this.prevY = this.currY;\n        let px, py, rad, mag;\n        rad = Math.atan2(this.currY, this.currX);\n        mag = Math.hypot(this.currX, this.currY);\n        if (mag > this.elem.offsetWidth / 2) {\n            px = Math.round(this.currX / mag * 100);\n            py = Math.round(this.currY / mag * 100);\n        }\n        else {\n            px = Math.round(this.currX * 2 / this.elem.offsetWidth * 100);\n            py = Math.round(this.currY * 2 / this.elem.offsetWidth * 100);\n        }\n        return { x: px, y: py };\n    }\n\n    private dispatchState(ignoreLastDispatch: boolean = false): void {\n        if (this.prevX != this.currX || this.prevY != this.currY) {\n            let now = Date.now();\n            if (ignoreLastDispatch || now > this.lastDispatch + this.sendInt) {\n                this.lastDispatch = now;\n                let pCoords = this.processPositionData();\n                let uri;\n                if (this.sendPath) {\n                    uri = `${this.sendPath}?x=${pCoords.x}&y=${pCoords.y}`;\n                    fetch(uri, {\n                        method: 'POST'\n                    });\n                }\n\n                if (this.debug) {\n                    if (uri) {\n                        console.log(`[ID: '${this.elem.id}']: StickChange (POST '${uri}')`);\n                    }\n                    else {\n                        console.log(`[ID: '${this.elem.id}']: StickChange (x: ${pCoords.x}, y: ${pCoords.y})`);\n                    }\n                }\n            }\n        }\n    }\n\n    private stateCheckLoop(): void {\n        if (!this.initialized) return;\n        this.dispatchState(true);\n        setTimeout(this.stateCheckLoop.bind(this), this.sendInt);\n    }\n}"],"names":[],"version":3,"file":"index.js.map"}